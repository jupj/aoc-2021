## One colum === one input processed
p1=1            p1=1            p1=1            p1=26           p1=1            p1=26           p1=26           p1=1            p1=26           p1=1            p1=1            p1=26           p1=26           p1=26
p2 = 11         p2 = 11         p2 = 15         p2 = -14        p2 = 10         p2 = 0          p2 = -6         p2 = 13         p2 = -3         p2 = 13         p2 = 15         p2 = -2         p2 = -9         p2 = -2
p3 = 6          p3 = 14         p3 = 13         p3 = 1          p3 = 6          p3 = 13         p3 = 6          p3 = 3          p3 = 8          p3 = 14         p3 = 4          p3 = 7          p3 = 15         p3 = 1

# Code; one column per stage
inp w           inp w           inp w           inp w           inp w           inp w           inp w           inp w           inp w           inp w           inp w           inp w           inp w           inp w
mul x 0         mul x 0         mul x 0         mul x 0         mul x 0         mul x 0         mul x 0         mul x 0         mul x 0         mul x 0         mul x 0         mul x 0         mul x 0         mul x 0
add x z         add x z         add x z         add x z         add x z         add x z         add x z         add x z         add x z         add x z         add x z         add x z         add x z         add x z
mod x 26        mod x 26        mod x 26        mod x 26        mod x 26        mod x 26        mod x 26        mod x 26        mod x 26        mod x 26        mod x 26        mod x 26        mod x 26        mod x 26
# x = z % 26
div z p1        div z p1        div z p1        div z p1        div z p1        div z p1        div z p1        div z p1        div z p1        div z p1        div z p1        div z p1        div z p1        div z p1
# z = z0/p1
add x p2        add x p2        add x p2        add x p2        add x p2        add x p2        add x p2        add x p2        add x p2        add x p2        add x p2        add x p2        add x p2        add x p2
eql x w         eql x w         eql x w         eql x w         eql x w         eql x w         eql x w         eql x w         eql x w         eql x w         eql x w         eql x w         eql x w         eql x w
eql x 0         eql x 0         eql x 0         eql x 0         eql x 0         eql x 0         eql x 0         eql x 0         eql x 0         eql x 0         eql x 0         eql x 0         eql x 0         eql x 0
# if ((z0 % 26) + p2 == w) { x = 0 } else { x = 1 }
mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0
add y 25        add y 25        add y 25        add y 25        add y 25        add y 25        add y 25        add y 25        add y 25        add y 25        add y 25        add y 25        add y 25        add y 25
# y = 25
mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x
add y 1         add y 1         add y 1         add y 1         add y 1         add y 1         add y 1         add y 1         add y 1         add y 1         add y 1         add y 1         add y 1         add y 1
# if ((z0 % 26) + p2 == w) { y = 1 } else { y = 26 }
mul z y         mul z y         mul z y         mul z y         mul z y         mul z y         mul z y         mul z y         mul z y         mul z y         mul z y         mul z y         mul z y         mul z y
# if ((z0 % 26) + p2 == w) { z = z0/p1 } else { z = 26*(z0/p1) }
mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0         mul y 0
add y w         add y w         add y w         add y w         add y w         add y w         add y w         add y w         add y w         add y w         add y w         add y w         add y w         add y w
add y p3        add y p3        add y p3        add y p3        add y p3        add y p3        add y p3        add y p3        add y p3        add y p3        add y p3        add y p3        add y p3        add y p3
# y = w + p3
mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x         mul y x
# if ((z0 % 26) + p2 == w) { y = 0 } else { y = w + p3 }
add z y         add z y         add z y         add z y         add z y         add z y         add z y         add z y         add z y         add z y         add z y         add z y         add z y         add z y
# if ((z0 % 26) + p2 == w) { z = z0/p1 } else { z = 26*(z0/p1) + w + p3 }


# The stages were generalized with parameters p1, p2, p3.
# Each stage uses z from the previous stage and reads an input w.
# The stage updates z as follows:

    if (((z % 26) + p2) == w) {
        z = z/p1;
    } else {
        z = 26*(z/p1) + w + p3;
    }

# There are 7 stages with p1=1, and 7 stages with p1=26.
# For z to be zeroed, the stages with p1=26 must always
# use the branch where z becomes smaller, i.e.  z' = z/p1

## INPUT for day24.c
## One line per stage with params p1,p2,p3
1,11,6
1,11,14
1,15,13
26,-14,1
1,10,6
26,0,13
26,-6,6
1,13,3
26,-3,8
1,13,14
1,15,4
26,-2,7
26,-9,15
26,-2,1
